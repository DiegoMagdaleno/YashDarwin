# (C) 2010 magicant

# Completion script for the "csplit" command.
# Supports POSIX 2008, GNU coreutils 8.6, FreeBSD 8.1, OpenBSD 4.8, NetBSD 5.0,
# Mac OS X 10.6.4, SunOS 5.10, HP-UX 11i v3.

function completion/csplit {

	case $("${WORDS[1]}" --version 2>/dev/null) in
		(*'coreutils'*) typeset type=GNU ;;
		(*)             typeset type="$(uname 2>/dev/null)" ;;
	esac
	case $type in
		(GNU) typeset long=true ;;
		(*)   typeset long= ;;
	esac

	typeset OPTIONS ARGOPT PREFIX
	OPTIONS=( #>#
	"f: ${long:+--prefix:}; specify the prefix of the output files"
	"k ${long:+--keep-files}; leave output files intact on an error"
	"n: ${long:+--digits:}; specify the suffix length for output files"
	"s ${long:+q --silent --quiet}; don't print output file sizes"
	) #<#

	case $type in (GNU)
		OPTIONS=("$OPTIONS" #>#
		"b: --suffix-format:; specify the format of output file suffix"
		"z --elide-empty-files; remove empty output files"
		"--help"
		"--version"
		) #<#
	esac

	command -f completion//parseoptions ${long:+-es}
	case $ARGOPT in
	(-)
		command -f completion//completeoptions
		;;
	(f)
		complete -P "$PREFIX" -f
		;;
	('')
		command -f completion//getoperands
		if [ ${WORDS[#]} -eq 0 ]; then
			complete -f
		else #>>#
			complete -T -D "split before a line matching the following regular expression" /
			complete -T -D "like / but don't include the matching line" %
			complete -T -D "repeat the previous operand's behavior the specified times" {
		fi #<<#
		;;
	esac

}


# vim: set ft=sh ts=8 sts=8 sw=8 noet:
